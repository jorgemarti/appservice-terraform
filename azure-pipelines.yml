# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
- repo: self
trigger:
  branches:
    include:
    - master
  # paths:
  #   exclude:
  #   - k8s-terraform/*
  #   - img/*
  #   - k8s-tf2/*

stages:
- stage: Validate
  jobs:
  - job: Validate
    continueOnError: false
    steps:
    - publish: appservice-terraform
      artifact: terraform_out
    - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
      displayName: 'Use Terraform v0.12.16'
      inputs:
        terraformVersion: 0.12.16
    - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform init'
      inputs:
        command: init
        workingDirectory: appservice-terraform
        backendType: azurerm
        backendServiceArm: 'AksTerraformSPN'
        backendAzureRmResourceGroupName: 'AksPrerreq-RG'
        backendAzureRmStorageAccountName: 'jorgemartiterraform'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'appservice.terraform.tfstate'
    - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform validate'
      inputs:
        command: validate
        workingDirectory: appservice-terraform